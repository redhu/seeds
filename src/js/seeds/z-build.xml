<project name="seeds" basedir="../../../" default="copy">
	<description>每个模块都要单独配置module的路径和合并js的顺序</description>
	<import file="../../../tools/build-common.xml"/>
	<!--
		模块名称，和模块文件夹同名
	-->
	<property name="module" value="${ant.project.name}"></property>
	<!-- 
		用于创建目录结构SRC
	-->
	<target name="prepare-module-src" depends="prepare">
		<!-- SRC -->
		<mkdir dir="${src.js}/${module}"/>
    </target>

	<!-- 
		用于创建目录结构dist
	-->

	<target name="prepare-module-dist">
		<!-- dist -->
        <mkdir dir="${dist.js}/${module}"/>
    </target>

	<!-- 
		用于创建目录结构
	-->
	<target name="prepare-module" depends="prepare-module-src,prepare-module-dist"></target>
	<!--
		JS/CSS文件合并，合并后应该有一个JS源文件或者一个CSS源文件(视情况进行修改)
	-->
	<target name="concat" depends="prepare-module">
		
		<!-- 合并JS -->
	    <concat encoding="${inputencoding}" outputencoding="${outputencoding}"
			destfile="${dist.js}/${module}/${ant.project.name}-source.js" force="no" fixlastline="true">
		    <filelist dir="${src.js}/${module}" 
		    	files= "seeds.js,
		    			config.js,
		    			util-lang.js,
	    				util-path.js,
		    			util-log.js,
		    			load.js"/>
	    </concat>
	</target>

	<!--
		JS/CSS文件压缩
	-->
	<target name="compress" depends="concat,replaceregexp">
		<!-- 压缩JS -->
        <java jar="${yuicompressor}" fork="true" failonerror="true">
            <arg line="--type js --charset ${inputencoding} -o ${dist.js}/${module}/${ant.project.name}.js ${dist.js}/${module}/${ant.project.name}-source.js"/>
        </java>
    </target>
	
	<!--
		代码copy到static目录
	-->
	<target name="copy" depends="compress">
	   <copy todir="${static}/js/${module}">
            <fileset dir="${dist.js}/${module}" includes="**/*.*" defaultexcludes="true"/>
       </copy>   
    </target>
	
	<!--
		清理操作
	-->
	<target name="clean">
        <delete includeemptydirs="true">
			<fileset dir="${dist}/${module}"  defaultexcludes="true"/>
		</delete>
    </target>
	
</project>
